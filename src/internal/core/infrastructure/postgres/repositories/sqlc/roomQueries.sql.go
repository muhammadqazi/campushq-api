// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: roomQueries.sql

package repositories

import (
	"context"
)

const selectAllRooms = `-- name: SelectAllRooms :many
SELECT room_id, name, description, capacity, created_at, updated_at, deleted_at, is_active, building_id FROM rooms WHERE is_active = true AND deleted_at IS NULL
`

func (q *Queries) SelectAllRooms(ctx context.Context) ([]Room, error) {
	rows, err := q.db.Query(ctx, selectAllRooms)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Room{}
	for rows.Next() {
		var i Room
		if err := rows.Scan(
			&i.RoomID,
			&i.Name,
			&i.Description,
			&i.Capacity,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.DeletedAt,
			&i.IsActive,
			&i.BuildingID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
