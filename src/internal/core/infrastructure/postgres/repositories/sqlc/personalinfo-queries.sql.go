// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: personalinfo-queries.sql

package repositories

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertPersonalInfo = `-- name: InsertPersonalInfo :exec
INSERT INTO personal_information (
    nationality,
    city,
    address,
    dob,
    place_of_birth,
    father_name,
    mother_name,
    guardian_phone_number,
    passport_number,
    passport_issue_date,
    passport_expiry_date,
    passport_issuing_authority,
    student_id,
    is_staff
) VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8,
    $9,
    $10,
    $11,
    $12,
    $13,
    $14
)
`

type InsertPersonalInfoParams struct {
	Nationality              string      `json:"nationality"`
	City                     string      `json:"city"`
	Address                  string      `json:"address"`
	Dob                      pgtype.Date `json:"dob"`
	PlaceOfBirth             string      `json:"place_of_birth"`
	FatherName               string      `json:"father_name"`
	MotherName               string      `json:"mother_name"`
	GuardianPhoneNumber      string      `json:"guardian_phone_number"`
	PassportNumber           string      `json:"passport_number"`
	PassportIssueDate        pgtype.Date `json:"passport_issue_date"`
	PassportExpiryDate       pgtype.Date `json:"passport_expiry_date"`
	PassportIssuingAuthority string      `json:"passport_issuing_authority"`
	StudentID                pgtype.Int4 `json:"student_id"`
	IsStaff                  bool        `json:"is_staff"`
}

func (q *Queries) InsertPersonalInfo(ctx context.Context, arg InsertPersonalInfoParams) error {
	_, err := q.db.Exec(ctx, insertPersonalInfo,
		arg.Nationality,
		arg.City,
		arg.Address,
		arg.Dob,
		arg.PlaceOfBirth,
		arg.FatherName,
		arg.MotherName,
		arg.GuardianPhoneNumber,
		arg.PassportNumber,
		arg.PassportIssueDate,
		arg.PassportExpiryDate,
		arg.PassportIssuingAuthority,
		arg.StudentID,
		arg.IsStaff,
	)
	return err
}
